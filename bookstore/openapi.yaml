openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /customers:openapi: 3.0.1
             info:
               title: OpenAPI definition
               version: v0
             servers:
               - url: http://localhost:8080
                 description: Generated server url
             paths:
               /publishers:
                 get:
                   tags:
                     - publisher-controller
                   operationId: getPublishers
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             type: array
                             items:
                               $ref: '#/components/schemas/Publisher'
                 put:
                   tags:
                     - publisher-controller
                   operationId: updatePublisher
                   requestBody:
                     content:
                       application/json:
                         schema:
                           $ref: '#/components/schemas/Publisher'
                     required: true
                   responses:
                     '204':
                       description: No Content
                 post:
                   tags:
                     - publisher-controller
                   operationId: addPublisher
                   requestBody:
                     content:
                       application/json:
                         schema:
                           $ref: '#/components/schemas/Publisher'
                     required: true
                   responses:
                     '201':
                       description: Created
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Publisher'
               /books/books/{id}:
                 get:
                   tags:
                     - book-controller
                   operationId: getBookById
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Book'
                 put:
                   tags:
                     - book-controller
                   operationId: updateBook
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                     - name: book
                       in: query
                       required: true
                       schema:
                         $ref: '#/components/schemas/Book'
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Book'
                 delete:
                   tags:
                     - book-controller
                   operationId: deleteBook
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Book'
               /author/author/{authorid}:
                 get:
                   tags:
                     - author-controller
                   operationId: getAuthorById
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Author'
                 put:
                   tags:
                     - author-controller
                   operationId: updateAuthor
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                     - name: author
                       in: query
                       required: true
                       schema:
                         $ref: '#/components/schemas/Author'
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Author'
                 delete:
                   tags:
                     - author-controller
                   operationId: deleteAuthor
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Author'
               /books:
                 get:
                   tags:
                     - book-controller
                   operationId: getAllBooks
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             type: object
                 post:
                   tags:
                     - book-controller
                   operationId: createBook
                   parameters:
                     - name: book
                       in: query
                       required: true
                       schema:
                         $ref: '#/components/schemas/Book'
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Book'
               /author:
                 get:
                   tags:
                     - author-controller
                   operationId: getAllAuthors
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             type: object
                 post:
                   tags:
                     - author-controller
                   operationId: createAuthor
                   parameters:
                     - name: author
                       in: query
                       required: true
                       schema:
                         $ref: '#/components/schemas/Author'
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Author'
               /publishers/{id}:
                 get:
                   tags:
                     - publisher-controller
                   operationId: getPublisherById
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             $ref: '#/components/schemas/Publisher'
                 delete:
                   tags:
                     - publisher-controller
                   operationId: deletePublisher
                   parameters:
                     - name: id
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '204':
                       description: No Content
               /books/author/{authorId}:
                 get:
                   tags:
                     - book-controller
                   operationId: getBooksByAuthor
                   parameters:
                     - name: authorId
                       in: path
                       required: true
                       schema:
                         type: integer
                         format: int32
                   responses:
                     '200':
                       description: OK
                       content:
                         '*/*':
                           schema:
                             type: object
             components:
               schemas:
                 Author:
                   type: object
                   properties:
                     firstName:
                       type: string
                     lastName:
                       type: string
                     street:
                       type: string
                     city:
                       type: string
                     state:
                       type: string
                     postalCode:
                       type: string
                     phone:
                       type: string
                     email:
                       type: string
                     authorId:
                       type: integer
                       format: int32
                 Book:
                   type: object
                   properties:
                     id:
                       type: integer
                       format: int32
                     isbn:
                       type: string
                     publishDate:
                       type: string
                       format: date
                     author:
                       $ref: '#/components/schemas/Author'
                     title:
                       type: string
                     publisher:
                       $ref: '#/components/schemas/Publisher'
                     price:
                       type: number
                 Publisher:
                   type: object
                   properties:
                     id:
                       type: integer
                       format: int32
                     books:
                       uniqueItems: true
                       type: array
                       items:
                         $ref: '#/components/schemas/Book'
                     name:
                       type: string
                     street:
                       type: string
                     city:
                       type: string
                     state:
                       type: string
                     postalCode:
                       type: integer
                       format: int32
                     email:
                       type: string
                     phone:
                       type: string
             
    get:
      tags:
        - customer-controller
      operationId: getCustomers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '204':
          description: No Content
    post:
      tags:
        - customer-controller
      operationId: addCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/state/{state}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerById
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        phone:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: integer
          format: int32
        country:
          type: string
